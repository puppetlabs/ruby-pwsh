# frozen_string_literal: true

require 'puppet/resource_api'

Puppet::ResourceApi.register_type(
  id: '{{.pct_name}}',
  docs: <<~EOS
    @summary a {{.pct_name}} type
    @example
    {{.pct_name}} { 'foo':
      ensure => 'present',
    }

    This type provides Puppet with the capabilities to manage ...

    If your type uses autorequires, please document as shown below, else delete
    these lines.
    **Autorequires**:
    * `Package[foo]`
  EOS
  features: [
{{- range $index, $feature := .rsapi.features -}}
    {{- if $index }}, {{ end }}'{{$feature}}'
{{- end -}}
  ],
  attributes: {
{{- if .rsapi.ensurable }}
    ensure: {
      type: 'Enum[present, absent]',
      desc: 'Whether this resource should be present or absent on the target system.',
      default: 'present',
    },
{{- end }}
    name: {
      type: 'String',
      desc: 'The name of the resource you want to manage.',
      behaviour: :namevar,
    },
{{- range .rsapi.attributes }}
    {{.name}}: {
      type: '{{.type}}',
      desc: '{{.desc}}',
    },
{{- end}}
  },
)